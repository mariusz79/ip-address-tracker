{"version":3,"sources":["images/icon-location.svg","components/Searchbar.js","components/Info.js","components/Hero.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Search","styled","div","Input","input","Button","button","Searchbar","props","type","value","placeholder","onChange","e","target","autoFocus","onClick","handleSubmit","Area","Part","Part1","Info","ipnumber","location","timezone","isp","Herospan","Hero","txt","changeValue","icon","L","iconRetinaUrl","require","iconUrl","shadowUrl","MapContainer","MapLeaflet","position","lat","lng","Map","center","zoom","TileLayer","attribution","url","Marker","App","useState","setValue","setLat","setLng","setIpnumber","setLocation","setTimezone","setIsp","myIp","setMyIp","getData","fetch","then","res","json","result","console","log","error","useEffect","className","test","isValidIp","alert","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.eda3afb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-location.ff171469.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Search = styled.div`\r\n    display: flex;\r\n    `;\r\nconst Input = styled.input`\r\n\tfont-size: 18px;\r\n\tpadding: 15px;\r\n\twidth: 500px;\r\n\tborder-radius: 16px 0 0 16px;\r\n\tborder: none;\r\n\t@media (max-width: 730px) {\r\n\t\twidth: 70vw;\r\n\t}\r\n\t@media (max-width: 500px) {\r\n        width: 80vw;\r\n        font-size: 15px;\r\n\t}\r\n\t&:focus,\r\n\t&:active {\r\n\t\toutline: none !important;\r\n\t}\r\n`;\r\nconst Button = styled.button`\r\n\tcursor: pointer;\r\n\tbackground-color: hsl(0deg 2% 24%);\r\n\tbackground-image: url(\"./images/icon-arrow.svg\");\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tpadding: 10px 25px;\r\n\tborder-radius: 0 16px 16px 0;\r\n\tborder: none;\r\n\t&:hover,\r\n\t&:focus {\r\n\t\toutline: none !important;\r\n\t\tbackground-color: hsl(0, 0%, 17%);\r\n\t}\r\n`;\r\n\r\nconst Searchbar = (props) => {\r\n\t \r\n    return (\r\n        \r\n\t\t<Search>\r\n\t\t\t<Input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tplaceholder=\"Search for any IP address or domain\"\r\n\t\t\t\tonChange={(e) => props.onChange(e.target.value)}\r\n\t\t\t\tautoFocus\r\n\t\t\t/>\r\n            <Button onClick={props.handleSubmit} >\r\n             \r\n            </Button>\r\n            </Search>\r\n            \r\n\t);\r\n};\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Area = styled.div`\r\n\tdisplay: flex;\r\n\tmax-width: 1000px;\r\n\tbackground: #fff;\r\n\tborder-radius: 16px;\r\n\tposition: relative;\r\n\tcolor: #000;\r\n\tmargin-top: 2rem;\r\n\tz-index: 1;\r\n\t@media (max-width: 900px) {\r\n\t\tfont-size: 0.7rem;\r\n\t}\r\n\t@media (max-width: 730px) {\r\n\t\tdisplay: block;\r\n\t\tpadding: 5px 8vw;\r\n\t}\r\n\t@media (max-width: 500px) {\r\n\t\twidth: 77vw;\r\n\t}\r\n`;\r\n\r\nconst Part = styled.div`\r\n\tposition: relative;\r\n\tpadding: 30px 30px 10px 30px;\r\n\tflex: 1;\r\n\ttext-align: left;\r\n\t@media (max-width: 730px) {\r\n\t\ttext-align: center;\r\n\t\tpadding: 10px 0;\r\n\t}\r\n\t& :after {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\ttop: 25%;\r\n\t\tright: 0;\r\n\t\twidth: 1px;\r\n\t\theight: 80px;\r\n\t\tbackground-color: hsl(0, 0%, 59%);\r\n\t\t@media (max-width: 730px) {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n\t& p {\r\n\t\tcolor: hsl(0, 0%, 59%);\r\n\t\tfont-size: 1rem;\r\n\t\tmargin: 0;\r\n\t\t@media (max-width: 900px) {\r\n            font-size: 10px;\r\n            font-weight: 700;\r\n\t\t}\r\n\t}\r\n\t& h2 {\r\n\t\t@media (max-width: 730px) {\r\n\t\t\tmargin: 5px 0 0 0;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Part1 = styled.div`\r\n\tflex: 1;\r\n\ttext-align: left;\r\n\tpadding: 30px 30px 10px 30px;\r\n\t@media (max-width: 730px) {\r\n\t\ttext-align: center;\r\n\t\tpadding: 10px 0;\r\n\t}\r\n\t& p {\r\n\t\tcolor: hsl(0, 0%, 59%);\r\n\t\tfont-size: 1rem;\r\n\t\tmargin: 0;\r\n\t\t@media (max-width: 900px) {\r\n\t\t\tfont-size: 10px;\r\n\t\t\tfont-weight: 700;\r\n\t\t}\r\n\t}\r\n\t& h2 {\r\n\t\t@media (max-width: 730px) {\r\n\t\t\tmargin: 5px 0 0 0;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Info = (props) => {\r\n    return (\r\n\t\t\t<Area>\r\n\t\t\t\t<Part>\r\n\t\t\t\t\t<p>IP ADRESS</p>\r\n\t\t\t\t\t<h2>{props.ipnumber}</h2>\r\n\t\t\t\t</Part>\r\n\t\t\t\t<Part>\r\n\t\t\t\t\t<p>LOCATION</p>\r\n\t\t\t\t\t<h2>{props.location}</h2>\r\n\t\t\t\t</Part>\r\n\t\t\t\t<Part>\r\n\t\t\t\t\t<p>TIMEZONE</p>\r\n\t\t\t\t\t<h2>{props.timezone}</h2>\r\n\t\t\t\t</Part>\r\n\t\t\t\t<Part1>\r\n\t\t\t\t\t<p>ISP</p>\r\n\t\t\t\t\t<h2>{props.isp}</h2>\r\n\t\t\t\t</Part1>\r\n\t\t\t</Area>\r\n\t\t);\r\n};\r\n\r\nexport default Info","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Searchbar from './Searchbar';\r\nimport Info from './Info';\r\n\r\nconst Herospan = styled.div`\r\n\twidth: 1440px;\r\n\t@media (max-width: 1440px) {\r\n\t\twidth: 100vw;\r\n\t}\r\n\theight: 250px;\r\n\tmax-height: 250px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tcolor: #fff;\r\n\tbackground-image: url(\"./images/pattern-bg.png\");\r\n\tbackground-repeat: no-repeat;\r\n`;\r\n\r\nconst Hero = ({value, txt, handleSubmit, changeValue, ipnumber, isp, timezone, location}) => {\r\n\treturn (\r\n\t\t<Herospan>\r\n\t\t\t<h1>{txt}</h1>\r\n\r\n\t\t\t<Searchbar\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={changeValue}\r\n\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t/>\r\n\t\t\t<Info\r\n\t\t\t\tipnumber={ipnumber}\r\n\t\t\t\tlocation={location}\r\n\t\t\t\ttimezone={timezone}\r\n\t\t\t\tisp={isp}\r\n\t\t\t/>\r\n\t\t</Herospan>\r\n\t);\r\n};\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Map, TileLayer, Marker} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\n\r\n\r\nlet icon = L.icon({\r\n\ticonRetinaUrl: require(\"../images/icon-location.svg\"),\r\n\ticonUrl: require(\"../images/icon-location.svg\"),\r\n\tshadowUrl: require(\"../images/icon-location.svg\"),\r\n});\r\n\r\nconst MapContainer = styled.div`\r\n\t& .leaflet-container {\r\n\t\twidth: 1440px;\r\n\t\theight: 70vh;\r\n\t\t@media (max-width: 1440px) {\r\n\t\t\twidth: 100vw;\r\n\t\t}\r\n\t\t& .leaflet-pane {\r\n\t\t\tz-index: 0;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst MapLeaflet = (props) => {\r\n    const zoom = 14;\r\n    const position = [props.lat, props.lng];\r\n    return (\r\n\t\t\t<MapContainer>\r\n\t\t\t\t<Map center={position} zoom={zoom}>\r\n\t\t\t\t\t<TileLayer\r\n\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n\t\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Marker position={position} icon={icon}>\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t</Map>\r\n\t\t\t</MapContainer>\r\n\t\t);\r\n\r\n};\r\n\r\nexport default MapLeaflet;","import React, { useState, useEffect} from 'react';\nimport Hero from \"./components/Hero\";\nimport Map from './components/Map';\nimport './App.css';\n\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [lat, setLat] = useState(0);\n  const [lng, setLng] = useState(0);\n  const [ipnumber, setIpnumber] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [timezone, setTimezone] = useState(\"\");\n  const [isp, setIsp] = useState('');\n  const [myIp, setMyIp] = useState(\"\");\n\n\n  const isValidIp = (value) =>\n\t\t/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n\t\t\tvalue\n\t\t)\n\t\t\t? true\n      : false;\n      \n  const getMyIp = () => {\n    fetch(\"https://api.ipify.org?format=json\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tsetMyIp(result[\"ip\"]);\n\t\t\t\t\tsetIpnumber(result[\"ip\"]);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then(getData(myIp));\n  }\n\n  \n  const getData = () => {\n    fetch(\n      `https://geo.ipify.org/api/v1?apiKey=at_4mU7LkMOE5PyVVDuP1GjaJOKCZq1Z&ipAddress=${value}`\n    )\n      .then((res) => res.json())\n\t\t\t\t.then(\n          (result) => {\n            console.log(result);\n           \tsetLat(result[\"location\"][\"lat\"]);\n            setLng(result[\"location\"][\"lng\"]);\n            setIpnumber(result[\"ip\"]);\n            setIsp(result[\"isp\"]);\n            setLocation(result[\"location\"][\"city\"]);\n            setTimezone(`UTC${result[\"location\"][\"timezone\"]}`);\n            setValue(\"\");\n\n\t\t\t\t\t},\n\t\t\t\t\t(error) => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t}\n      )\n  }\n\n  const handleSubmit = () => {\n    isValidIp(value) ?\n      getData()\n    : alert('Enter a valid IP adress')\n    };\n  \nuseEffect(() => {\n  getMyIp(); \n  // eslint-disable-next-line\n}, []);\n\n  return (\n\t\t<div className=\"App\">\n\t\t\t<Hero\n\t\t\t\ttxt=\"IP Address Tracker\"\n\t\t\t\tvalue={value}\n\t\t\t\tchangeValue={(e) => {\n\t\t\t\t\tsetValue(e);\n\t\t\t\t}}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\tipnumber={ipnumber}\n\t\t\t\tlocation={location}\n\t\t\t\ttimezone={timezone}\n\t\t\t\tisp={isp}\n\t\t\t/>\n\t\t\t<Map lat={lat} lng={lng} />\n\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}